name: Rust & Python CI

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rust_fetch
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Prepare cargo cache dirs
        run: mkdir -p ~/.cargo/registry ~/.cargo/git

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('Cargo.lock') }}
      - name: Build
        run: cargo build

      - name: Run tests
        run: cargo test --verbose

  python-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python_train
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: environment.yml
          activate-environment: python_train
          auto-activate-base: false

      - name: Run Python tests
        run: pytest
